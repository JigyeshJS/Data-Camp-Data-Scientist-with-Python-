#The Python Interface

# Example, do not modify!
print(5 / 8)

# Print the sum of 7 and 10
print(7+10)


#When to use Python?
#Q Python is a pretty versatile language. For which applications can you use Python?
#A 
# You want to do some quick calculations.
# For your new business, you want to develop a database-driven website.
# Your boss asks you to clean and analyze the results of the latest satisfaction survey.
# All of the above.(Answer)

#Any comments?
# Division
print(5 / 8)

# sum
print(7 + 10)

#Python as a calculator
# Addition, subtraction
print(5 + 5)
print(5 - 5)

# Multiplication, division, modulo, and exponentiation
print(3 * 5)
print(10 / 2)
print(18 % 7)
print(4 ** 2)

# How much is your $100 worth after 7 years?
print(100*(1.1**7))

#Variable Assignment
# Create a variable savings
savings = 100

# Print out savings
print(savings)

#Calculations with variables
# Create a variable savings
savings = 100

# Create a variable growth_multiplier
growth_multiplier = 1.1

# Calculate result
result = savings*(growth_multiplier**7)

# Print out result
print(result)

#Other variable types
# Create a variable desc
desc = 'compound interest'

# Create a variable profitable
profitable = True

#Guess the type
#Q 
To find out the type of a value or a variable that refers to that value, you can use the type() function. Suppose you've defined a variable a, but you forgot the type of this variable. To determine the type of a, simply execute:
#type(a)
#We already went ahead and created three variables: a, b and c. You can use the IPython shell to discover their type. Which of the following options is correct?

#A
#a is of type float, b is of type str, c is of type bool

#Operations with other types
savings = 100
growth_multiplier = 1.1
desc = "compound interest"

# Assign product of savings and growth_multiplier to year1
year1 = (savings * growth_multiplier)

# Print the type of year1
print(type(year1))

# Assign sum of desc and desc to doubledesc
doubledesc = desc+desc

# Print out doubledesc
print(doubledesc)

#Type conversion
# Definition of savings and result
savings = 100
result = 100 * 1.10 ** 7

# Fix the printout
print("I started with $" + str(savings) + " and now have $" + str(result) + ". Awesome!")

# Definition of pi_string
pi_string = "3.1415926"

# Convert pi_string into float: pi_float
pi_float = float(pi_string)

#Can Python handle everything?
#Q
#Now that you know something more about combining different sources of information, have a look at the four Python expressions below. Which one of these will throw an error? You can always copy and paste this code in the IPython Shell to find out!
#A
#"The correct answer to this multiple choice exercise is answer number " + 2
